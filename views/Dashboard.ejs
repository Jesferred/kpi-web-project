<!DOCTYPE html>
<html lang="uk">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GigaKey</title>
    <link rel="stylesheet" href="/css/popup.css">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
</head>

<body>
    <div class="wrapper">
        <main class="main">
            <div class="sidebar">
                <div class="logo">
                    <img src="/imgs/lightwpp.webp" alt="Логотип">
                </div>
                <div class="info">
                    <p>
                        <%= login %>
                    </p>
                </div>
                <button onclick="window.location.href='/logout'" class="btn" id="logout-btn">Log Out</button>
            </div>

            <div class="content">
                <div class="table-container">
                    <table>
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>URL</th>
                                <th>Login</th>
                                <th>Pass</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="table-body">
                            <% passwords.forEach(function(password, index) { %>
                                <tr data-id="<%= password.id %>">
                                    <td>
                                        <%= ++index %>
                                    </td>
                                    <td id="website">
                                        <%= password.website %>
                                            <button class="copy-btn"
                                                onclick="copyToClipboard('<%= password.website %>')">
                                                <i class='bx bx-copy bx-sm' style="color: #ffffff;"></i>
                                            </button>
                                    </td>
                                    <td id="login">
                                        <%= password.login %>
                                            <button class="copy-btn" onclick="copyToClipboard('<%= password.login %>')">
                                                <i class='bx bx-copy bx-sm' style="color: #ffffff;"></i>
                                            </button>
                                    </td>
                                    <td id="password-<%= password.id %>">
                                        <span class="password-stars" id="password-stars-<%= password.id %>">
                                            <%= '•' .repeat(password.password.length) %>
                                        </span>
                                        <span class="real-password" id="real-password-<%= password.id %>"
                                            style="display: none;">
                                            <%= password.password %>
                                        </span>
                                        <button class="decrypt-btn" data-id="<%= password.id %>">
                                            <i class='bx bx-show bx-sm' style="color:#ffffff" id="showPassword"></i>
                                        </button>
                                    </td>

                                    <td>
                                        <button class="delete-btn" data-id="<%= password.id %>"><i
                                                class='bx bx-trash bx-sm' style="color:#ffffff"></i></button>
                                        <button class="change-btn" data-id="<%= password.id %>"><i
                                                class='bx bx-edit-alt bx-sm' style="color: #ffffff;"></i></button>
                                    </td>
                                </tr>
                                <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
        <footer class="footer">
            <button class="btn open-popup">Add</button>
        </footer>
    </div>

    <form action="/dashboard/add" method="POST">
        <div class="popup-bg">
            <div class="popup">
                <button type="button" class="close-popup">&times;</button>

                <div class="field url-f">
                    <label class="pop-label" for="url">URL:</label>
                    <input name="website" type="text" id="url" placeholder="Введіть URL" required>
                    <button type="button" onclick="copyToClipboard(document.getElementById('url').value)"><i
                            class='bx bx-copy'></i></button>
                </div>

                <div class="field login-f">
                    <label class="pop-label" for="login">Login:</label>
                    <input name="login" type="text" id="login-input" placeholder="Введіть логін" required>
                    <button type="button" onclick="copyToClipboard(document.getElementById('login-input').value)"><i
                                                class='bx bx-copy'></i></button>
                </div>

                <div class="field pass-f">
                    <label class="pop-label" for="pass">Password:</label>
                    <input name="password" id="pass" placeholder="Введіть пароль" required>
                    <button type="button" onclick="copyToClipboard(document.getElementById('pass').value)"><i
                            class='bx bx-copy'></i></button>
                </div>

                <div class="password-strength">
                    <div class="strength-bar" id="strength-bar"></div>
                </div>

                <div class="button-container">
                    <button type="button" class="generate-pass">Generate Password</button>
                    <button type="button" class="settings-btn"><i class='bx bx-cog'></i></button>
                    <button type="submit" class="btn save-btn">Save</button>
                </div>
            </div>
        </div>
    </form>

    <form action="/dashboard/edit" method="POST">
        <div class="popup-bg-edit">
            <div class="popup">
                <button type="button" class="close-popup-edit">&times;</button>
                <input type="hidden" name="id" id="edit-id">
                <div class="field url-f">
                    <label class="pop-label" for="edit-url">URL:</label>
                    <input name="website" type="text" id="edit-url" placeholder="Введіть URL" required>
                    <button type="button" onclick="copyToClipboard(document.getElementById('edit-url').value)"><i
                            class='bx bx-copy'></i></button>
                </div>

                <div class="field login-f">
                    <label class="pop-label" for="edit-login">Login:</label>
                    <input name="login" type="text" id="edit-login-input" placeholder="Введіть логін" required>
                    <button type="button" onclick="copyToClipboard(document.getElementById('edit-login-input').value)"><i
                                                class='bx bx-copy'></i></button>
                </div>

                <div class="field pass-f">
                    <label class="pop-label" for="edit-pass">Password:</label>
                    <input name="password" id="edit-pass" placeholder="Введіть пароль" required>
                    <button type="button" onclick="copyToClipboard(document.getElementById('edit-pass').value)"><i
                            class='bx bx-copy'></i></button>
                </div>

                <div class="password-strength">
                    <div class="strength-bar" id="edit-strength-bar"></div>
                </div>

                <div class="button-container">
                    <button type="button" class="generate-pass">Generate Password</button>
                    <button type="button" class="settings-btn"><i class='bx bx-cog'></i></button>
                    <button type="submit" class="btn save-btn">Save</button>
                </div>
            </div>
        </div>
    </form>

    <form id="generate-password-form">
        <div class="popup-bg-settings">
            <div class="popup-settings">

                <button type="button" class="close-popup-settings">&times;</button>
                <div class="field counter">
                    <label class="set-pop-label" for="length">Password Length:</label>
                    <input type="number" id="length" name="length" value="8" min="6" max="20">
                </div>

                <div class="field numbers">
                    <label>
                        <input type="checkbox" name="numbers" checked>
                        Include Numbers
                    </label>
                </div>

                <div class="field symbols">
                    <label>
                        <input type="checkbox" name="symbols" checked>
                        Include Symbols
                    </label>
                </div>

                <div class="field uppercase">
                    <label>
                        <input type="checkbox" name="uppercase">
                        Include Uppercase
                    </label>
                </div>

                <div class="field excludeSimilarCharacters">
                    <label>
                        <input type="checkbox" name="excludeSimilarCharacters" checked>
                        Exclude Similar Characters
                    </label>
                </div>

                <div class="field strict">
                    <label>
                        <input type="checkbox" name="strict" checked>
                        Strict Mode
                    </label>
                </div>
            </div>
        </div>
    </form>

    <script>
        async function copyToClipboard(value) {
            try {
                await navigator.clipboard.writeText(value);
            } catch (err) {
                console.error('Failed to copy: ', err);
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            const deleteButtons = document.querySelectorAll('.delete-btn');
            const decryptButtons = document.querySelectorAll('.decrypt-btn');
            const generatePassButton = document.querySelector('.generate-pass');
            const editButtons = document.querySelectorAll('.change-btn');

            editButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    const id = button.getAttribute('data-id');
                    try {
                        const response = await fetch(`/dashboard/password/${id}`);
                        const result = await response.json();

                        if (result.success) {
                            const { website, login, decryptedPassword } = result.password;

                            if (website && login && decryptedPassword) {
                                document.getElementById('edit-id').value = id;
                                document.getElementById('edit-url').value = website;
                                document.getElementById('edit-login-input').value = login;
                                document.getElementById('edit-pass').value = decryptedPassword;
                                document.querySelector('.popup-bg-edit').style.display = 'block';
                            } else {
                                alert('Some data is missing');
                            }
                        } else {
                            alert(result.message || 'Failed to edit password');
                        }
                    } catch (error) {
                        console.error('Error fetching password:', error);
                        alert('An error occurred while trying to edit the password');
                    }
                });
            });

            deleteButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    const id = button.getAttribute('data-id');
                    try {
                        const response = await fetch(`/dashboard/delete/${id}`);
                        const result = await response.json();

                        if (result.success) {
                            const row = document.querySelector(`tr[data-id="${id}"]`);
                            row.remove();
                        } else {
                            alert('Failed to delete password');
                        }
                        location.reload();
                    } catch (error) {
                        console.error('Error:', error);
                    }
                });
            });

            decryptButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    const id = button.getAttribute('data-id');
                    const passwordStars = document.getElementById(`password-stars-${id}`);
                    const realPassword = document.getElementById(`real-password-${id}`);
                    const icon = button.querySelector('i');

                    if (realPassword.style.display === 'none') {
                        try {
                            const response = await fetch(`/dashboard/decrypt/${id}`);
                            const result = await response.json();

                            if (result.decryptedPassword) {
                                realPassword.textContent = result.decryptedPassword;
                                passwordStars.style.display = 'none';
                                realPassword.style.display = 'inline';
                                copyToClipboard(result.decryptedPassword);
                                icon.className = 'bx bxs-hide bx-sm';
                                // Set a timeout to hide the password after 5 seconds
                                setTimeout(() => {
                                    passwordStars.style.display = 'inline';
                                    realPassword.style.display = 'none';
                                    icon.className = 'bx bx-show bx-sm';
                                }, 15000);

                                alert('Password view for 15 seconds and copied to clipboard');
                            } else {
                                alert('Failed to decrypt password');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                        }
                    } else {
                        // Скрываем пароль обратно и показываем звёздочки
                        passwordStars.style.display = 'inline';
                        realPassword.style.display = 'none';
                        icon.className = 'bx bx-show bx-sm';
                    }
                });
            });

            // Функция для обновления полоски силы пароля
            document.getElementById('pass').addEventListener('input', updateStrengthBar);
            document.getElementById('edit-pass').addEventListener('input', updateEditStrengthBar);

            function updateStrengthBar() {
                const strengthBar = document.getElementById('strength-bar');
                const password = document.getElementById('pass').value;
                let strength = 0;

                if (password.length > 7) strength += 1; // длина пароля больше 7 символов
                if (/[A-Z]/.test(password)) strength += 1; // содержит заглавные буквы
                if (/[0-9]/.test(password)) strength += 1; // содержит цифры
                if (/[\W]/.test(password)) strength += 1; // содержит специальные символы

                switch (strength) {
                    case 0:
                        strengthBar.style.width = '0%';
                        strengthBar.style.backgroundColor = 'red';
                        break;
                    case 1:
                        strengthBar.style.width = '25%';
                        strengthBar.style.backgroundColor = 'red';
                        break;
                    case 2:
                        strengthBar.style.width = '50%';
                        strengthBar.style.backgroundColor = 'orange';
                        break;
                    case 3:
                        strengthBar.style.width = '75%';
                        strengthBar.style.backgroundColor = 'yellowgreen';
                        break;
                    case 4:
                        strengthBar.style.width = '100%';
                        strengthBar.style.backgroundColor = 'green';
                        break;
                }
            }

            function updateEditStrengthBar() {
                const strengthBar = document.getElementById('edit-strength-bar');
                const password = document.getElementById('edit-pass').value;
                let strength = 0;

                if (password.length > 7) strength += 1; // длина пароля больше 7 символов
                if (/[A-Z]/.test(password)) strength += 1; // содержит заглавные буквы
                if (/[0-9]/.test(password)) strength += 1; // содержит цифры
                if (/[\W]/.test(password)) strength += 1; // содержит специальные символы

                switch (strength) {
                    case 0:
                        strengthBar.style.width = '0%';
                        strengthBar.style.backgroundColor = 'red';
                        break;
                    case 1:
                        strengthBar.style.width = '25%';
                        strengthBar.style.backgroundColor = 'red';
                        break;
                    case 2:
                        strengthBar.style.width = '50%';
                        strengthBar.style.backgroundColor = 'orange';
                        break;
                    case 3:
                        strengthBar.style.width = '75%';
                        strengthBar.style.backgroundColor = 'yellowgreen';
                        break;
                    case 4:
                        strengthBar.style.width = '100%';
                        strengthBar.style.backgroundColor = 'green';
                        break;
                }
            }

            generatePassButton.addEventListener('click', async function (event) {
                event.preventDefault();

                const length = document.getElementById('length').value;
                const numbers = document.querySelector('input[name="numbers"]').checked;
                const symbols = document.querySelector('input[name="symbols"]').checked;
                const uppercase = document.querySelector('input[name="uppercase"]').checked;
                const excludeSimilarCharacters = document.querySelector('input[name="excludeSimilarCharacters"]').checked;
                const strict = document.querySelector('input[name="strict"]').checked;

                try {
                    const response = await fetch('/dashboard/generate-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        body: new URLSearchParams({
                            'length': length,
                            'numbers': numbers ? 'on' : '',
                            'symbols': symbols ? 'on' : '',
                            'uppercase': uppercase ? 'on' : '',
                            'excludeSimilarCharacters': excludeSimilarCharacters ? 'on' : '',
                            'strict': strict ? 'on' : ''
                        })
                    });

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    const result = await response.json();
                    const passwordField = document.getElementById('pass');
                    updateStrengthBar();
                    passwordField.value = result.password;
                } catch (error) {
                    console.error('Error during password generation:', error);
                }
            });
        });
    </script>

    <script src="/js/jquerry.min.js"></script>
    <script src="/js/popup.js"></script>
</body>

</html>